import{auth as t}from"firebaseui";import e from"firebase/app";import"firebase/auth";function s(){return(s=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var s=arguments[e];for(var i in s)Object.prototype.hasOwnProperty.call(s,i)&&(t[i]=s[i])}return t}).apply(this,arguments)}class i{constructor(s){this.dispatch=s.dispatch,this.signInOptions=s.signInOptions,this.firebase=e.initializeApp({apiKey:"AIzaSyCdtQ6V3qDxpgDO-usa3zWvBhIJKpAd4mM",authDomain:"useauth-demo.firebaseapp.com",projectId:"useauth-demo",storageBucket:"useauth-demo.appspot.com",messagingSenderId:"520315046120",appId:"1:520315046120:web:4384141e88f49e638c215d"},"useAuth"),this.ui=new t.AuthUI(this.firebase.auth()),this.firebase.auth().onAuthStateChanged(this.onAuthStateChanged)}onAuthStateChanged(t){console.log("HAI",t.toJSON())}static addDefaultParams(t,i){return s({signInOptions:[e.auth.EmailAuthProvider.PROVIDER_ID]},t)}authorize(){this.dispatch("LOGIN"),this.ui.start("#firebaseui-auth-container",{signInOptions:this.signInOptions,signInFlow:"popup",callbacks:{signInSuccessWithAuthResult:t=>(console.log({authResult:t}),this.dispatch("AUTHENTICATED",{user:this.firebase.auth().currentUser.toJSON(),authResult:{expiresIn:3600}}),!1)}})}signup(){}logout(t){}userId(t){var e;return null==(e=this.firebase.auth().currentUser)?void 0:e.uid}userRoles(t){return[]}async handleLoginCallback(){return!1}async checkSession(){const t=this.firebase.auth().currentUser.toJSON();if(console.log("checkSession",t),t)return{user:t,authResult:{expiresIn:3600}};throw new Error("Session invalid")}}export{i as FirebaseUI};
//# sourceMappingURL=FirebaseUI.modern.js.map
